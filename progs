7
7. Write an AngularJS program to create a simple CRUD application (Create, Read, Update, and Delete) for managing users.
<!DOCTYPE html>
<html ng-app="crudApp">
    <head>
        <title>AngularJS CRUD Application</title>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
    </head>
    <body ng-controller="crudController">
        <h1>User Management</h1>
        <!-- Form for adding a new user -->
        <form ng-submit="addUser()">
            Name:
            <input type="text" ng-model="name" required>
            <br>
            Age:
            <input type="number" ng-model="age" required>
            <br>
            <button type="submit">Add User</button>
        </form>
        <br>
        <!-- Table to display user information -->
        <table>
            <thead>
                <tr>
                <th>Name</th>
                <th>Age</th>
                <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="user in users">
                <td>{{ user.name }}</td>
                <td>{{ user.age }}</td>
                <td>
                <button ng-click="editUser(user)">Edit</button>
                <button ng-click="deleteUser(user)">Delete</button>
                </td>
                </tr>
            </tbody>
        </table>
        <script>
            var app = angular.module('crudApp', []);
            app.controller('crudController', function ($scope) {
                $scope.users = [
                                { name: 'Ram', age: 25 },
                                { name: 'Sam', age: 30 },
                            ];
                $scope.addUser = function () {
                $scope.users.push({ name: $scope.name, age: $scope.age });
                $scope.name = '';
                $scope.age = '';
               
                
                
            };
            $scope.editUser = function (user) {
                var index = $scope.users.indexOf(user);
                // Prompt for updated values with validation
                var updatedName = prompt('Enter updated name:', user.name);
                var updatedAge = prompt('Enter updated age:', user.age);
                // Check if the user pressed cancel
                if (!(updatedName == null && updatedAge == null) ){
                // Update the user
                var updatedUser = { name: updatedName, age: parseInt(updatedAge) };
                $scope.users.splice(index, 1, updatedUser);
                }
            };
            $scope.deleteUser = function (user) {
                var index = $scope.users.indexOf(user);
                $scope.users.splice(index, 1);
            };
            });
        </script>
    </body>
</html>
8
8. DevelopAngularJS program to create a login form, with validation for the username and password fields.
<html ng-app="loginApp">
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
<body ng-controller="loginController">
<h1>Login Form</h1>
<!-- Form for login with validation -->
<form ng-submit="login()">
Username
<input type="text" ng-model="username" required>
<br>
Password
<input type="password" ng-model="password" required>
<br>
<button type="submit">Login</button>
</form>
<script>
var app = angular.module('loginApp', []);
app.controller('loginController', function ($scope) {
$scope.login = function () {
// Check if username is "Ram" and password is "Ram"
if ($scope.username == 'ram' && $scope.password == 'ram') {
alert('Login successful');
// Add further logic for successful login
} else {
alert('Login failed. Invalid username or password.');
// Add logic for failed login
}
};
});
</script>
</body>
</html>
9
 <html ng-app="employeeApp">
 <head>
 <title>AngularJS Employee Search</title>
 <script
 src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
 </head>
 <body ng-controller="employeeController">
 <h2>Employee List</h2>
 Search by Name:
 <input type="text" ng-model="searchName" />
 Search by Salary:
 <input type="number" ng-model="searchSalary" />
 <ul>
 <li ng-repeat="employee in employees | filter: {name: searchName, salary:
 searchSalary}">
 {{ employee.name }}- Salary: Rs{{ employee.salary }}
 </li>
 </ul>
 <script>
 var app = angular.module('employeeApp', []);
 app.controller('employeeController', function ($scope) {
 $scope.employees = [
 { name: 'Ram', salary: 50000 },
 { name: 'abi', salary: 60000 },
 { name: 'sam', salary: 75000 },
 { name: 'raj', salary: 55000 }
 ];
 $scope.searchName = '';
 $scope.searchSalary = '';
 });
 </script>
 </body>
 </html>
 10
 <html ng-app="itemApp">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
    <body ng-controller="itemController">
    <h2>Item Collection</h2>
    Add New Item:
    <input type="text" ng-model="newItem" />
    <button ng-click="addItem()">Add Item</button>
    <ul>
    <li ng-repeat="item in items track by $index">
    {{ item }}
    <button ng-click="removeItem($index)">Remove</button>
    </li>
    </ul>
    <p>Total Items: {{ items.length }}</p>
    <script>
        var app = angular.module('itemApp', []);
        app.controller('itemController', function ($scope) {
        $scope.items = ['Item 1', 'Item 2', 'Item 3']; // Default items
        $scope.newItem = '';
        $scope.addItem = function ()
        {if ($scope.newItem) {
        $scope.items.push($scope.newItem);
        $scope.newItem = ''; // Clear the input field
        }
        };
        $scope.removeItem = function (index) {
        $scope.items.splice(index, 1);
        };
        });
    
</script>
</body>
</html>
11
<html ng-app="studentApp">
 <title>Student Name Converter</title>
 <script
 src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
 <body ng-controller="studentController">
 <h2>Student Names</h2>
 <!-- Display the original student names-->
 <h3>Original Names:</h3>
 <ul>
 <li ng-repeat="name in names">
 {{ name }}
 </li>
 </ul>
 <!-- Display the student names in uppercase using filters-->
 <h3>Names in Uppercase:</h3>
 <ul>
 <li ng-repeat="name in names">
 {{ name | uppercase }}
 </li>
 </ul>
 <script>
 var app = angular.module('studentApp', []);
 app.controller('studentController', function ($scope) {
    $scope.names = ['Raj', 'Ram', 'Sam'];
 });
 </script>
 </body>
 </html>
 12
  <!DOCTYPE html>
 <html ng-app="dateApp">
 <head>
 <title>Date Display Application</title>
 <script
 src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
 </head>
 <body ng-controller="dateController">
 <h2>Date Display</h2>
 <!-- Display the current date with various filter parameters-->
 <p>Default Format: {{ currentDate | date }}</p>
 <p>Custom Format (yyyy-MM-dd): {{ currentDate | date:'yyyy-MM-dd' }}</p>
 <p>Short Date: {{ currentDate | date:'shortDate' }}</p>
 <p>Full Date: {{ currentDate | date:'fullDate' }}</p>
 <script>
 var app = angular.module('dateApp', []);
 app.controller('dateController', function ($scope) {
 $scope.currentDate = new Date();
 });
 </script>
 </body>
 </html>
